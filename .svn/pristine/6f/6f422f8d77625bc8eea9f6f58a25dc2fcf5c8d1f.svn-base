<UserControl xmlns:toolkit="http://schemas.microsoft.com/winfx/2006/xaml/presentation/toolkit"  
			 xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
             x:Class="DynamicConnections.NutriStyle.MenuGenerator.Controls.Profile"
           xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
           xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
           xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
           xmlns:toolkit2="clr-namespace:System.Windows.Controls;assembly=System.Windows.Controls.Toolkit"
           xmlns:Controls="clr-namespace:DynamicConnections.NutriStyle.MenuGenerator.Controls;assembly=DynamicConnections.NutriStyle.MenuGenerator"
           mc:Ignorable="d"
           xmlns:navigation="clr-namespace:System.Windows.Controls;assembly=System.Windows.Controls.Navigation"
           d:DesignWidth="565" d:DesignHeight="700" 
           xmlns:helpers="clr-namespace:DynamicConnections.NutriStyle.MenuGenerator.Engine.Helpers"
           xmlns:validation="clr-namespace:System.Windows.Controls;assembly=System.Windows.Controls.Data.Input"
           xmlns:vsm="clr-namespace:System.Windows;assembly=System.Windows"
           xmlns:sys="clr-namespace:System;assembly=mscorlib"
           xmlns:sdk="http://schemas.microsoft.com/winfx/2006/xaml/presentation/sdk"  Background="Transparent" Loaded="Page_Loaded">


    <UserControl.Resources>
        <helpers:RowIndexConverter x:Key="rowConvertor" />
        <helpers:RadioButtonConverter x:Key="radioButtonConverter" />


        <ControlTemplate x:Key="ValidationToolTipTemplate">
            <Grid x:Name="Root" Margin="5,0" RenderTransformOrigin="0,0" Opacity="0">
                <Grid.RenderTransform>
                    <TranslateTransform x:Name="xform" X="-25"/>
                </Grid.RenderTransform>
                <vsm:VisualStateManager.VisualStateGroups>
                    <vsm:VisualStateGroup Name="OpenStates">
                        <vsm:VisualStateGroup.Transitions>
                            <vsm:VisualTransition GeneratedDuration="0"/>
                            <vsm:VisualTransition To="Open" GeneratedDuration="0:0:0.2">
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="xform" Storyboard.TargetProperty="X" To="0" Duration="0:0:0.2">
                                        <DoubleAnimation.EasingFunction>
                                            <BackEase Amplitude=".3" EasingMode="EaseOut"/>
                                        </DoubleAnimation.EasingFunction>
                                    </DoubleAnimation>
                                    <DoubleAnimation Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.2"/>
                                </Storyboard>
                            </vsm:VisualTransition>
                        </vsm:VisualStateGroup.Transitions>
                        <vsm:VisualState x:Name="Closed">
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity" To="0" Duration="0"/>
                            </Storyboard>
                        </vsm:VisualState>
                        <vsm:VisualState x:Name="Open">
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetName="xform" Storyboard.TargetProperty="X" To="0" Duration="0"/>
                                <DoubleAnimation Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity" To="1" Duration="0"/>
                            </Storyboard>
                        </vsm:VisualState>
                    </vsm:VisualStateGroup>
                </vsm:VisualStateManager.VisualStateGroups>

                <Border Margin="4,4,-4,-4" Background="#052A2E31" CornerRadius="5"/>
                <Border Margin="3,3,-3,-3" Background="#152A2E31" CornerRadius="4"/>
                <Border Margin="2,2,-2,-2" Background="#252A2E31" CornerRadius="3"/>
                <Border Margin="1,1,-1,-1" Background="#352A2E31" CornerRadius="2"/>

                <Border Background="#FFDC000C" CornerRadius="2"/>
                <Border CornerRadius="2">
                    <TextBlock 
                  UseLayoutRounding="false" 
                  Foreground="White" Margin="8,4,8,4" MaxWidth="250" TextWrapping="Wrap" Text="{Binding (Validation.Errors)[0].ErrorContent}"/>
                </Border>
            </Grid>
        </ControlTemplate>

        <Style TargetType="RadioButton" x:Name="radioButtonWithImage">
            <Setter Property="Background" Value="#FF448DCA"/>
            <Setter Property="Foreground" Value="#FF000000"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="VerticalContentAlignment" Value="Top"/>
            <Setter Property="Padding" Value="4,1,0,0"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="BorderBrush">
                <Setter.Value>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#FFA3AEB9" Offset="0"/>
                        <GradientStop Color="#FF8399A9" Offset="0.375"/>
                        <GradientStop Color="#FF718597" Offset="0.375"/>
                        <GradientStop Color="#FF617584" Offset="1"/>
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="RadioButton">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <vsm:VisualStateManager.VisualStateGroups>
                                <vsm:VisualStateGroup x:Name="CommonStates">
                                    <vsm:VisualState x:Name="Normal"/>
                                    <vsm:VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <!--
                                        <DoubleAnimation Storyboard.TargetName="BackgroundOverlay" Storyboard.TargetProperty="Opacity" Duration="0" To="1"/>
                                        <DoubleAnimation Storyboard.TargetName="BoxMiddleBackground" Storyboard.TargetProperty="Opacity" Duration="0" To="1"/>
                                        <ColorAnimation Storyboard.TargetName="BoxMiddle" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[3].(GradientStop.Color)" Duration="0" To="#7FFFFFFF"/>
                                        <ColorAnimation Storyboard.TargetName="BoxMiddle" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[2].(GradientStop.Color)" Duration="0" To="#CCFFFFFF"/>
                                        <ColorAnimation Storyboard.TargetName="BoxMiddle" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Duration="0" To="#F2FFFFFF"/>
                                        -->
                                        </Storyboard>
                                    </vsm:VisualState>
                                    <vsm:VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <!--
                                        <DoubleAnimation Storyboard.TargetName="BackgroundOverlay" Storyboard.TargetProperty="Opacity" Duration="0" To="1"/>
                                        <DoubleAnimation Storyboard.TargetName="BoxMiddleBackground" Storyboard.TargetProperty="Opacity" Duration="0" To="1"/>
                                        <ColorAnimation Storyboard.TargetName="BoxMiddle" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[3].(GradientStop.Color)" Duration="0" To="#6BFFFFFF"/>
                                        <ColorAnimation Storyboard.TargetName="BoxMiddle" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[2].(GradientStop.Color)" Duration="0" To="#C6FFFFFF"/>
                                        <ColorAnimation Storyboard.TargetName="BoxMiddle" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Duration="0" To="#EAFFFFFF"/>
                                        <ColorAnimation Storyboard.TargetName="BoxMiddle" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Duration="0" To="#F4FFFFFF"/>
                                        <ColorAnimation Storyboard.TargetName="BoxMiddle" Storyboard.TargetProperty="(Shape.Stroke).(GradientBrush.GradientStops)[3].(GradientStop.Color)" Duration="0" To="#FF6DBDD1"/>
                                        <ColorAnimation Storyboard.TargetName="BoxMiddle" Storyboard.TargetProperty="(Shape.Stroke).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Duration="0" To="#FF6DBDD1"/>
                                        <ColorAnimation Storyboard.TargetName="BoxMiddle" Storyboard.TargetProperty="(Shape.Stroke).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Duration="0" To="#FF6DBDD1"/>
                                        <ColorAnimation Storyboard.TargetName="BoxMiddle" Storyboard.TargetProperty="(Shape.Stroke).(GradientBrush.GradientStops)[2].(GradientStop.Color)" Duration="0" To="#FF6DBDD1"/>
                                        -->
                                        </Storyboard>
                                    </vsm:VisualState>
                                    <vsm:VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <!--
                                        <DoubleAnimation Storyboard.TargetName="contentPresenter" Storyboard.TargetProperty="(UIElement.Opacity)" Duration="0" To=".55"/>
                                        <DoubleAnimation Storyboard.TargetName="DisabledVisualElement" Storyboard.TargetProperty="(UIElement.Opacity)" Duration="0" To="0.55"/>
                                        -->
                                        </Storyboard>
                                    </vsm:VisualState>
                                </vsm:VisualStateGroup>
                                <vsm:VisualStateGroup x:Name="CheckStates">
                                    <vsm:VisualState x:Name="Checked">
                                        <Storyboard>
                                            <!--
                                        <DoubleAnimation Storyboard.TargetName="CheckIcon" Storyboard.TargetProperty="(UIElement.Opacity)" Duration="0" To="1"/>
                                        -->
                                        </Storyboard>
                                    </vsm:VisualState>
                                    <vsm:VisualState x:Name="Unchecked"/>
                                </vsm:VisualStateGroup>
                                <vsm:VisualStateGroup x:Name="FocusStates">
                                    <vsm:VisualState x:Name="Focused">
                                        <Storyboard>
                                            <!--
                                        <DoubleAnimation Storyboard.TargetName="ContentFocusVisualElement" Storyboard.TargetProperty="Opacity" Duration="0" To="1"/>
                                        -->
                                        </Storyboard>
                                    </vsm:VisualState>
                                    <vsm:VisualState x:Name="Unfocused" />
                                </vsm:VisualStateGroup>
                                <vsm:VisualStateGroup x:Name="ValidationStates">
                                    <vsm:VisualState x:Name="Valid"/>
                                    <vsm:VisualState x:Name="InvalidUnfocused">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ValidationErrorElement" Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="0" >
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </vsm:VisualState>
                                    <vsm:VisualState x:Name="InvalidFocused">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ValidationErrorElement" Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="0" >
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="validationTooltip" Storyboard.TargetProperty="IsOpen">
                                                <DiscreteObjectKeyFrame KeyTime="0" >
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <sys:Boolean>True</sys:Boolean>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </vsm:VisualState>
                                </vsm:VisualStateGroup>
                            </vsm:VisualStateManager.VisualStateGroups>
                            <Grid HorizontalAlignment="Left" VerticalAlignment="Top">

                                <ContentPresenter
                              
                              Grid.Column="0"
                              x:Name="contentPresenter"
                              Content="{TemplateBinding Content}"
                              ContentTemplate="{TemplateBinding ContentTemplate}"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                              Margin="{TemplateBinding Padding}"/>


                                <Border x:Name="ValidationErrorElement" BorderThickness="1" CornerRadius="1" BorderBrush="#FFDB000C" Visibility="Collapsed">
                                    <Grid  Visibility="Visible" 
                                ToolTipService.PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}">

                                        <ToolTipService.ToolTip>
                                            <ToolTip x:Name="validationTooltip" 
                                       Template="{StaticResource ValidationToolTipTemplate}"
                                       DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                       Placement="Right" 
                                       PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}">
                                                <ToolTip.Triggers>
                                                    <EventTrigger RoutedEvent="Canvas.Loaded">
                                                        <EventTrigger.Actions>
                                                            <BeginStoryboard>
                                                                <Storyboard>
                                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="validationTooltip" Storyboard.TargetProperty="IsHitTestVisible">
                                                                        <DiscreteObjectKeyFrame KeyTime="0" >
                                                                            <DiscreteObjectKeyFrame.Value>
                                                                                <sys:Boolean>true</sys:Boolean>
                                                                            </DiscreteObjectKeyFrame.Value>
                                                                        </DiscreteObjectKeyFrame>
                                                                    </ObjectAnimationUsingKeyFrames>
                                                                </Storyboard>
                                                            </BeginStoryboard>
                                                        </EventTrigger.Actions>
                                                    </EventTrigger>
                                                </ToolTip.Triggers>
                                            </ToolTip>
                                        </ToolTipService.ToolTip>
                                        <!--
                                        <Ellipse Stroke="#FFDB000C" StrokeThickness="1" Width="14" Height="14" />
                                        <Ellipse HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,-2,-1,0" Fill="#FFDB000C" Width="4" Height="4"/>
                                        <Ellipse HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,-5,-4,0" Fill="Transparent" Width="10" Height="10"/>
                                        -->


                                        <Border CornerRadius="4" BorderBrush="Red" Height="55" Width="55"></Border>
                                    </Grid>

                                </Border>
                            </Grid>




                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>
	<Border Style="{StaticResource borderStyle}"  Height="700">
		
            <toolkit2:BusyIndicator Grid.Column="0" Grid.Row="1" HorizontalAlignment="Stretch"   Margin="0,0,0,0" 
                        VerticalAlignment="Stretch" BorderThickness="0" Name="busyIndicator" Visibility="Visible" 
                        IsBusy="True" >
                
                    <Grid  VerticalAlignment="Stretch" Name="LayoutRoot" Height="Auto">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="30"></RowDefinition>

							 <RowDefinition Height="40"></RowDefinition>
                            <!-- 1 -->
                            <RowDefinition Height="40"></RowDefinition>
                            <!-- 2 -->
							<RowDefinition Height="70"></RowDefinition>
                            <!-- 3 -->
                            <RowDefinition Height="80"></RowDefinition>
                            <!-- 4 -->
                            <RowDefinition Height="30"></RowDefinition>
                            <!-- 5 -->
                            <RowDefinition Height="30"></RowDefinition>
                            <!-- 6 -->
                            <RowDefinition Height="30"></RowDefinition>
                            <!-- 7 -->
                            <RowDefinition Height="50"></RowDefinition>
                            <!-- 8 -->
                            <RowDefinition Height="30"></RowDefinition>
                            <!-- 9 -->
                            <RowDefinition Height="30"></RowDefinition>
                            <!-- 10 -->
                            <RowDefinition Height="30"></RowDefinition>
                            <!-- 11 -->
                            <RowDefinition Height="30"></RowDefinition>
                            <!-- 12 -->
                            <RowDefinition Height="30"></RowDefinition>
                           
                           <!-- 14 -->
                            <RowDefinition Height="*"></RowDefinition>
                            

                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="125"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>


                        <Grid Height="Auto" Grid.Row="0" Grid.ColumnSpan="2">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="180"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="40"/>
                            </Grid.ColumnDefinitions>
                            <sdk:Label Content="Profile Information" Style="{StaticResource textHeaderStyle}" Grid.Column="0"/>
                            <sdk:Label Content="" Name="name" FontSize="16" FontWeight="Bold" Foreground="#3099C8"  Grid.Column="1"/>
                            <Button Content="Next"  Width="35" ToolTipService.ToolTip="Next: Menu Preferences" Cursor="Hand" Click="SaveGrid" Height="24" Grid.Column="2" Name="Next"/>
                        </Grid>

                        <validation:ValidationSummary  Name="ValidationSummary" Canvas.Top="50"  Grid.Row="1" Grid.ColumnSpan="2" Margin="0,20,0,0" />

                        <StackPanel Grid.Row="1" Grid.ColumnSpan="2"  Orientation="Vertical">
                            <sdk:Label Foreground="#878787" Content="This setup determines your daily calorie needs" FontSize="12" FontWeight="Bold"/>
                        </StackPanel>

                        <StackPanel Grid.Row="2" Grid.ColumnSpan="2" Orientation="Horizontal">
                            <sdk:Label  Foreground="#878787" Content="Your Profile (" FontSize="12" FontWeight="Bold"/>
                            <sdk:Label  Foreground="#D55354" Content="*required items" FontSize="12" FontWeight="Bold"/>
                            <sdk:Label  Foreground="#878787" Content=")" FontSize="12" FontWeight="Bold"/>
                        </StackPanel>

						<StackPanel Grid.Row="3" Orientation="Vertical" Grid.ColumnSpan="2" Visibility="Collapsed" Name="Name">
							<StackPanel Orientation="Horizontal">
								<sdk:Label Content="First Name" Foreground="#878787" FontWeight="Bold" />
								<TextBox Height="25"  Name="FirstName"  VerticalAlignment="Center" HorizontalAlignment="Left" IsEnabled="True"
										 Width="120" Margin="87,0,0,0" Style="{StaticResource textBoxStyleCustom}"
										 Text='{Binding FirstName,  UpdateSourceTrigger=Explicit,
											Mode=TwoWay, ValidatesOnExceptions=True, NotifyOnValidationError=True}'
										 />
								<sdk:Label Content="Last Name" Foreground="#878787" FontWeight="Bold" Margin="10,0,0,0"/>

								 <TextBox Height="25"  Name="LastName"  VerticalAlignment="Center" HorizontalAlignment="Left" IsEnabled="True"
										 Width="120" Margin="55,0,0,0" Style="{StaticResource textBoxStyleCustom}"
										 Text='{Binding LastName,  UpdateSourceTrigger=Explicit,
											Mode=TwoWay, ValidatesOnExceptions=True, NotifyOnValidationError=True}'
										 />
							</StackPanel>
							<StackPanel Orientation="Horizontal" Margin="0,10,0,0">
								<TextBlock Text="Update Parent Shopping List" Foreground="#878787" FontWeight="Bold" TextWrapping="Wrap" Width="150"  />
								<CheckBox Height="25"  Name="RollParentShoppingList"  VerticalAlignment="Center" HorizontalAlignment="Left" IsEnabled="True"
										 Width="120" Margin="5,0,0,0" 
										 IsChecked='{Binding RollParentShoppingList,  UpdateSourceTrigger=Explicit,
											Mode=TwoWay, ValidatesOnExceptions=True, NotifyOnValidationError=True}'
										 />
							</StackPanel>	
						</StackPanel>

                        <StackPanel Grid.Row="4" Grid.ColumnSpan="2" Orientation="Horizontal">
                            <sdk:Label Content="Gender" Foreground="#878787" FontWeight="Bold" />
                            <sdk:Label  Foreground="#D55354" Content="*" FontSize="12" FontWeight="Bold" Margin="5,0,91,0"/>

                            <RadioButton GroupName="GenderOptions" Click="Female_Click"  BorderThickness="0"  Background="Transparent" Name="femaleButton" Cursor="Hand" ToolTipService.ToolTip="Female" 
                                IsChecked="{Binding UserGender, Mode=TwoWay, ValidatesOnExceptions=True, 
                                NotifyOnValidationError=True, UpdateSourceTrigger=Explicit,
                                ConverterParameter=Female, Converter={StaticResource radioButtonConverter}
                                }" Style="{StaticResource radioButtonWithImage}">
                                <RadioButton.Content>
                                    <Image Source="{Binding FemaleImage}" Name="femaleImage"/>
                                </RadioButton.Content>
                            </RadioButton>

                            <RadioButton GroupName="GenderOptions" Click="Male_Click" BorderThickness="0" Margin="50,0,0,0" Background="Transparent" Name="maleButton"  Cursor="Hand" ToolTipService.ToolTip="Male" 
                                IsChecked="{Binding UserGender, Mode=TwoWay, ValidatesOnExceptions=True, 
                                NotifyOnValidationError=True, UpdateSourceTrigger=Explicit, 
                                ConverterParameter=Male, Converter={StaticResource radioButtonConverter}}" Style="{StaticResource radioButtonWithImage}">
                                <RadioButton.Content>
                                    <Image Source="{Binding MaleImage}" Name="maleImage" Visibility="Visible"/>
                                </RadioButton.Content>
                            </RadioButton>

                        </StackPanel>

                        <StackPanel  Grid.Row="5" Grid.ColumnSpan="2" Orientation="Horizontal">
                            <sdk:Label Content="Birthday" Foreground="#878787" FontWeight="Bold" />
                            <sdk:Label  Foreground="#D55354" Content="*" FontSize="12" FontWeight="Bold" Margin="5,0,73,0"/>
                            <Controls:ComboBoxWithValidation x:Name="BirthMonth"  Height="25" Width="120" Margin="10,0,0,0" 
                                SelectedPair='{Binding BirthMonth, Mode=TwoWay, UpdateSourceTrigger=Explicit, ValidatesOnExceptions=True, NotifyOnValidationError=True}' />
                            <Controls:ComboBoxWithValidation x:Name="BirthDay"  Height="25" Width="110" Margin="10,0,0,0"  
                                SelectedPair='{Binding BirthDay, Mode=TwoWay, UpdateSourceTrigger=Explicit, ValidatesOnExceptions=True, NotifyOnValidationError=True}' />
                            <Controls:ComboBoxWithValidation x:Name="BirthYear"  Height="25" Width="110" Margin="10,0,0,0"  
                                SelectedPair='{Binding BirthYear, Mode=TwoWay, UpdateSourceTrigger=Explicit, ValidatesOnExceptions=True, NotifyOnValidationError=True}' />
                        </StackPanel>


                        <StackPanel  Grid.Row="6" Grid.ColumnSpan="2" Orientation="Horizontal">
                            <sdk:Label Content="Height" Foreground="#878787" FontWeight="Bold" />
                            <sdk:Label Foreground="#D55354" Content="*" FontSize="12" FontWeight="Bold" Margin="5,0,85,0"/>
                            <Controls:ComboBoxWithValidation x:Name="HeightFeet"  Height="25" Width="120" HorizontalAlignment="Left"  Margin="10,0,0,0" 
                                SelectedPair='{Binding HeightFeet,  UpdateSourceTrigger=Explicit,
                                Mode=TwoWay, ValidatesOnExceptions=True, NotifyOnValidationError=True}'/>

                            <Controls:ComboBoxWithValidation x:Name="HeightInches"  Height="25" Width="110" HorizontalAlignment="Left"  Margin="10,0,0,0" 
                                SelectedPair='{Binding HeightInches,  UpdateSourceTrigger=Explicit,
                                Mode=TwoWay, ValidatesOnExceptions=True, NotifyOnValidationError=True}'/>

                        </StackPanel>

                        <StackPanel  Grid.Row="7" Grid.ColumnSpan="2" Orientation="Horizontal">
                            <sdk:Label Content="Weight (Pounds)" Foreground="#878787" FontWeight="Bold" />
                            <sdk:Label  Foreground="#D55354" Content="*" FontSize="12" FontWeight="Bold" Margin="5,0,20,0"/>
                            <TextBox Height="25"  Name="CurrentWeight"  VerticalAlignment="Center" HorizontalAlignment="Left" IsEnabled="True"
                                     Width="120" Margin="10,0,0,0" Style="{StaticResource textBoxStyleCustom}"
                                     Text='{Binding CurrentWeight,  UpdateSourceTrigger=Explicit,
                                        Mode=TwoWay, ValidatesOnExceptions=True, NotifyOnValidationError=True}'
                                     />

                        </StackPanel>


                        <StackPanel  Grid.Row="8" Grid.ColumnSpan="2" Orientation="Vertical">
                            <StackPanel  Orientation="Horizontal">
                                <sdk:Label Content="Choose option that best describes" Foreground="#878787" FontWeight="Bold" />
                                <sdk:Label Content="your activity level" Foreground="#0DB1D4" FontWeight="Bold" Margin="5,0,5,0" MouseLeftButtonUp="ActivityLabel_MouseLeftButtonUp" Cursor="Hand" />
                                <sdk:Label  Foreground="#D55354" Content="*" FontSize="12" FontWeight="Bold" Margin="5,0,0,0"/>
                            </StackPanel>
                            <Controls:ComboBoxWithValidation  x:Name="ActivityLevel" Height="25" Width="230" Margin="150,0,0,0"
                                HorizontalAlignment="Left" 
                                SelectedPair='{Binding ActivityLevel, Mode=TwoWay, UpdateSourceTrigger=Explicit,
                                ValidatesOnExceptions=True, NotifyOnValidationError=True}'/>
                        </StackPanel>

                        <StackPanel  Grid.Row="9" Grid.ColumnSpan="2" Orientation="Horizontal">
                            <sdk:Label Content="Weight Management Options" Foreground="#878787" FontWeight="Bold"/>
                        </StackPanel>

                        <StackPanel Grid.Row="10" Grid.ColumnSpan="2" Orientation="Horizontal">
                            <CheckBox Grid.Column="1" Grid.Row="15" Height="16" HorizontalAlignment="Left" Margin="125,7,0,0" Checked="maintainWeight_Checked"
                                      Name="maintainWeight" VerticalAlignment="Top" IsChecked="{Binding MaintainTargetWeight, Mode=TwoWay, UpdateSourceTrigger=Explicit}"/>
                            <sdk:Label Grid.Row="15" Grid.Column="0" Content="I want to maintain my current weight" Height="19" 
                                       HorizontalAlignment="Right"  Name="maintainWeightLabel" VerticalAlignment="Center"  Visibility="Visible"/>
                        </StackPanel>

                        <StackPanel Grid.Row="11" Grid.ColumnSpan="2" Orientation="Horizontal" Name="targetWeightLabel" Visibility="Visible">
                            <sdk:Label  Margin="125,0,0,0" Content="I want to reach a target wieght of" Height="19" HorizontalAlignment="Right"  
                                        VerticalAlignment="Center" />
                            <TextBox Height="25" Width="35"  Name="targetWeight" VerticalAlignment="Center" HorizontalAlignment="Left" 
                                     Foreground="{StaticResource defaultFontColor}" Text='{Binding TargetWeight, UpdateSourceTrigger=Explicit,
                                Mode=TwoWay, ValidatesOnExceptions=True, NotifyOnValidationError=True}' />
                            <sdk:Label  Margin="5,0,0,0" Content="pounds" Height="19" HorizontalAlignment="Right"  
                                        VerticalAlignment="Center" Visibility="Visible"/>
                        </StackPanel>

                        <StackPanel Grid.Row="12" Grid.ColumnSpan="2" Orientation="Horizontal" Name="poundsPerWeekLabel"  Visibility="Visible" >
                            <sdk:Label Content="While losing (or gaining)" Height="19" HorizontalAlignment="Right"  
                                       VerticalAlignment="Center"  Visibility="Visible" Margin="125,0,0,0"/>

                            <Controls:ComboBoxWithValidation x:Name="PoundsPerWeek" Height="25" Width="60" HorizontalAlignment="Left" Margin="10,0,0,0" 
                                SelectedPair='{Binding PoundsPerWeek, UpdateSourceTrigger=Explicit,
                                Mode=TwoWay, ValidatesOnExceptions=True, NotifyOnValidationError=True}'/>

                            <sdk:Label Content="pounds per week" Height="19" HorizontalAlignment="Right"  
                                       VerticalAlignment="Center"  Visibility="Visible" Margin="5,0,0,0"/>
                        </StackPanel>

                        <StackPanel  Grid.Row="13" Grid.ColumnSpan="2" Orientation="Horizontal" Name="iWantToLose">
                            <sdk:Label Content="I want to lose more than 2 pounds per week" Foreground="#0DB1D4" FontWeight="Bold" Margin="125,0,0,0" MouseLeftButtonUp="LosePounds_MouseLeftButtonUp" Cursor="Hand"/>
                            
                        </StackPanel>
                       
                    
					<StackPanel Grid.Column="0" Name="BottomNext" Orientation="Horizontal" Grid.Row="14" Grid.ColumnSpan="2" VerticalAlignment="Stretch">
						<Button Content="Next: Menu Preferences"  
							Width="150" HorizontalAlignment="Left" ToolTipService.ToolTip="Next: Menu Preferences" 
							Cursor="Hand" Click="SaveGrid" Height="24" VerticalAlignment="Bottom" Margin="0,0,0,0"/>

						<Button Content="Next: Additional Profiles" Name="EditAdditionalProfiles"
							Width="150" HorizontalAlignment="Left" ToolTipService.ToolTip="Next: Additional Profiles" 
							Cursor="Hand" Click="AdditionalProfiles" Height="24" VerticalAlignment="Bottom" Margin="10,0,0,0"/>
					</StackPanel>

					<StackPanel Grid.Column="0" Orientation="Horizontal" Name="BottomSave" Visibility="Collapsed" VerticalAlignment="Stretch" Grid.Row="14" Grid.ColumnSpan="2">
						<Button Content="Save"  
							Width="75" HorizontalAlignment="Left" ToolTipService.ToolTip="Save" 
							Cursor="Hand" Click="SaveGrid" Height="24" VerticalAlignment="Bottom" Margin="0,0,0,0"/>
					</StackPanel>
               </Grid>	
            </toolkit2:BusyIndicator>



      

    
	  </Border>
</UserControl>
